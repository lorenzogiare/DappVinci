{
  "contractName": "PatentManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "newPatent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "oldHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newHash",
          "type": "bytes32"
        }
      ],
      "name": "patentChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addPatent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "getPatent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_newHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "changePatent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"newPatent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newHash\",\"type\":\"bytes32\"}],\"name\":\"patentChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addPatent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_newHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"changePatent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getPatent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPatent(bytes32,address)\":{\"details\":\"add new Patent, caller is required to pay 0.2 eth\",\"params\":{\"_hash\":\"hash of the data\",\"_owner\":\"owner of the patent (might be different from the caller)\"}},\"changePatent(bytes32,uint256)\":{\"details\":\"change hash associated to a patent, only the owner has access\",\"params\":{\"_id\":\"id of the patent of interest\",\"_newHash\":\"hash of the modified data\"}},\"getPatent(bytes32)\":{\"details\":\"check if hash of a patent exists\",\"params\":{\"_hash\":\"hash of the data\"},\"returns\":{\"_0\":\"return owner of the patent (if hash exists), null address otherwise (0x0)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PatentManager.sol\":\"PatentManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PatentManager.sol\":{\"keccak256\":\"0xb05664ee0bdbeea38be4a14e1a1c959ab8ee37a30ed55e92d8ca668bd54c4917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9c33d659fb891627894e8b5c0df802e84f79213e5290891e5f78a830dd1d7d8\",\"dweb:/ipfs/QmYRbcjWRU6SxRf6gJeU9pUmUZ7mS6SZamDpjnAXnQjnh3\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b50610a72806100246000396000f3fe6080604052600436106100345760003560e01c8063172b33c814610039578063d06e416814610076578063e0e4ec2b14610092575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610575565b6100ae565b60405161006d91906105e3565b60405180910390f35b610090600480360381019061008b9190610634565b6100eb565b005b6100ac60048036038101906100a791906106a0565b6102f9565b005b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600066b1a2bc2ec5000090506001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019290610763565b60405180910390fd5b8034146101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906107f5565b60405180910390fd5b60006001600084815260200190815260200160002060010154905060006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360016000858152602001908152602001600020600101819055507f1823c9db63c13f8f0e8923945080acf2eabb312365d1e8073f1294db8a60de528382866040516102eb93929190610833565b60405180910390a150505050565b60006702c68af0bb1400009050600073ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906108dc565b60405180910390fd5b8034146103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e19061096e565b60405180910390fd5b6000808154809291906103fc906109bd565b9190505550604051806060016040528060005481526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152506001600080548152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050816002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ef12abd6c2d8f6c3ae12d017d313074f6296f1a1167119594ec6d7361b392c8600054848460405161052d93929190610a05565b60405180910390a1505050565b600080fd5b6000819050919050565b6105528161053f565b811461055d57600080fd5b50565b60008135905061056f81610549565b92915050565b60006020828403121561058b5761058a61053a565b5b600061059984828501610560565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105cd826105a2565b9050919050565b6105dd816105c2565b82525050565b60006020820190506105f860008301846105d4565b92915050565b6000819050919050565b610611816105fe565b811461061c57600080fd5b50565b60008135905061062e81610608565b92915050565b6000806040838503121561064b5761064a61053a565b5b600061065985828601610560565b925050602061066a8582860161061f565b9150509250929050565b61067d816105c2565b811461068857600080fd5b50565b60008135905061069a81610674565b92915050565b600080604083850312156106b7576106b661053a565b5b60006106c585828601610560565b92505060206106d68582860161068b565b9150509250929050565b600082825260208201905092915050565b7f6f6e6c7920746865206f776e6572206f662074686520706174656e742063616e60008201527f206d6f6469667920746865206861736800000000000000000000000000000000602082015250565b600061074d6030836106e0565b9150610758826106f1565b604082019050919050565b6000602082019050818103600083015261077c81610740565b9050919050565b7f6d6f64696679696e67206120506174656e74207265717569726573207061796960008201527f6e6720302e303520657468210000000000000000000000000000000000000000602082015250565b60006107df602c836106e0565b91506107ea82610783565b604082019050919050565b6000602082019050818103600083015261080e816107d2565b9050919050565b61081e816105fe565b82525050565b61082d8161053f565b82525050565b60006060820190506108486000830186610815565b6108556020830185610824565b6108626040830184610824565b949350505050565b7f746869732068617368206f6620646174612068617320616c726561647920626560008201527f656e20696e6a6563746564000000000000000000000000000000000000000000602082015250565b60006108c6602b836106e0565b91506108d18261086a565b604082019050919050565b600060208201905081810360008301526108f5816108b9565b9050919050565b7f616464696e67206120506174656e7420726571756972657320706179696e672060008201527f302e322065746821000000000000000000000000000000000000000000000000602082015250565b60006109586028836106e0565b9150610963826108fc565b604082019050919050565b600060208201905081810360008301526109878161094b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c8826105fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109fa576109f961098e565b5b600182019050919050565b6000606082019050610a1a6000830186610815565b610a276020830185610824565b610a3460408301846105d4565b94935050505056fea2646970667358221220d740078669db122c00b6333854d0aded30108c8b4b634fcc4b71fceca9acf05164736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c8063172b33c814610039578063d06e416814610076578063e0e4ec2b14610092575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610575565b6100ae565b60405161006d91906105e3565b60405180910390f35b610090600480360381019061008b9190610634565b6100eb565b005b6100ac60048036038101906100a791906106a0565b6102f9565b005b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600066b1a2bc2ec5000090506001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019290610763565b60405180910390fd5b8034146101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906107f5565b60405180910390fd5b60006001600084815260200190815260200160002060010154905060006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360016000858152602001908152602001600020600101819055507f1823c9db63c13f8f0e8923945080acf2eabb312365d1e8073f1294db8a60de528382866040516102eb93929190610833565b60405180910390a150505050565b60006702c68af0bb1400009050600073ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906108dc565b60405180910390fd5b8034146103ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e19061096e565b60405180910390fd5b6000808154809291906103fc906109bd565b9190505550604051806060016040528060005481526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152506001600080548152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050816002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ef12abd6c2d8f6c3ae12d017d313074f6296f1a1167119594ec6d7361b392c8600054848460405161052d93929190610a05565b60405180910390a1505050565b600080fd5b6000819050919050565b6105528161053f565b811461055d57600080fd5b50565b60008135905061056f81610549565b92915050565b60006020828403121561058b5761058a61053a565b5b600061059984828501610560565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105cd826105a2565b9050919050565b6105dd816105c2565b82525050565b60006020820190506105f860008301846105d4565b92915050565b6000819050919050565b610611816105fe565b811461061c57600080fd5b50565b60008135905061062e81610608565b92915050565b6000806040838503121561064b5761064a61053a565b5b600061065985828601610560565b925050602061066a8582860161061f565b9150509250929050565b61067d816105c2565b811461068857600080fd5b50565b60008135905061069a81610674565b92915050565b600080604083850312156106b7576106b661053a565b5b60006106c585828601610560565b92505060206106d68582860161068b565b9150509250929050565b600082825260208201905092915050565b7f6f6e6c7920746865206f776e6572206f662074686520706174656e742063616e60008201527f206d6f6469667920746865206861736800000000000000000000000000000000602082015250565b600061074d6030836106e0565b9150610758826106f1565b604082019050919050565b6000602082019050818103600083015261077c81610740565b9050919050565b7f6d6f64696679696e67206120506174656e74207265717569726573207061796960008201527f6e6720302e303520657468210000000000000000000000000000000000000000602082015250565b60006107df602c836106e0565b91506107ea82610783565b604082019050919050565b6000602082019050818103600083015261080e816107d2565b9050919050565b61081e816105fe565b82525050565b61082d8161053f565b82525050565b60006060820190506108486000830186610815565b6108556020830185610824565b6108626040830184610824565b949350505050565b7f746869732068617368206f6620646174612068617320616c726561647920626560008201527f656e20696e6a6563746564000000000000000000000000000000000000000000602082015250565b60006108c6602b836106e0565b91506108d18261086a565b604082019050919050565b600060208201905081810360008301526108f5816108b9565b9050919050565b7f616464696e67206120506174656e7420726571756972657320706179696e672060008201527f302e322065746821000000000000000000000000000000000000000000000000602082015250565b60006109586028836106e0565b9150610963826108fc565b604082019050919050565b600060208201905081810360008301526109878161094b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109c8826105fe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109fa576109f961098e565b5b600182019050919050565b6000606082019050610a1a6000830186610815565b610a276020830185610824565b610a3460408301846105d4565b94935050505056fea2646970667358221220d740078669db122c00b6333854d0aded30108c8b4b634fcc4b71fceca9acf05164736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9076:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:1",
                "type": ""
              }
            ],
            "src": "334:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:1"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:1",
                "type": ""
              }
            ],
            "src": "417:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:1"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:1",
                "type": ""
              }
            ],
            "src": "545:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:1",
                "type": ""
              }
            ],
            "src": "690:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:1",
                "type": ""
              }
            ],
            "src": "1025:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:1",
                "type": ""
              }
            ],
            "src": "1157:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:1",
                "type": ""
              }
            ],
            "src": "1259:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:1",
                "type": ""
              }
            ],
            "src": "1383:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1656:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1666:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1677:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1666:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1638:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1648:7:1",
                "type": ""
              }
            ],
            "src": "1611:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1737:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1794:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1803:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1806:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1796:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1796:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1796:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1760:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1785:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1767:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1767:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1757:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1757:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1747:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1730:5:1",
                "type": ""
              }
            ],
            "src": "1694:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1874:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1884:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1906:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1893:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1884:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1949:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1922:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1922:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1852:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1860:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1868:5:1",
                "type": ""
              }
            ],
            "src": "1822:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2050:391:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2096:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2098:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2098:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2098:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2071:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2080:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2092:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2063:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2063:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2060:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2189:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2204:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2208:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2233:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2268:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2279:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2264:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2264:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2288:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2243:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2233:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2316:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2331:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2345:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2335:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2361:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2396:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2407:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2392:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2392:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2416:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2371:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2371:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2361:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2012:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2023:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2035:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2043:6:1",
                "type": ""
              }
            ],
            "src": "1967:474:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2490:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2547:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2556:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2559:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2549:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2549:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2549:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2513:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2538:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2520:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2520:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2510:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2503:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2500:63:1"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2483:5:1",
                "type": ""
              }
            ],
            "src": "2447:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2627:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2637:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2659:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2646:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2637:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2702:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2675:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2675:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2675:33:1"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2605:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2613:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2621:5:1",
                "type": ""
              }
            ],
            "src": "2575:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2803:391:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2849:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2851:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2851:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2851:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2824:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2820:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2820:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2845:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2816:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2816:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2813:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2942:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2957:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2971:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2961:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2986:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3021:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3032:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3017:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3017:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3041:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2996:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2996:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2986:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3069:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3084:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3098:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3088:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3114:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3149:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3160:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3145:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3145:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3169:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3124:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3114:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2765:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2776:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2788:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2796:6:1",
                "type": ""
              }
            ],
            "src": "2720:474:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3296:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3313:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3318:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3306:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3306:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3334:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3353:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3358:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3349:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3334:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3268:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3273:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3284:11:1",
                "type": ""
              }
            ],
            "src": "3200:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3481:129:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3503:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3511:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3499:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3499:14:1"
                      },
                      {
                        "hexValue": "6f6e6c7920746865206f776e6572206f662074686520706174656e742063616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3515:34:1",
                        "type": "",
                        "value": "only the owner of the patent can"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3492:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3571:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3579:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3567:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:15:1"
                      },
                      {
                        "hexValue": "206d6f64696679207468652068617368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3584:18:1",
                        "type": "",
                        "value": " modify the hash"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3560:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:43:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3560:43:1"
                }
              ]
            },
            "name": "store_literal_in_memory_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3473:6:1",
                "type": ""
              }
            ],
            "src": "3375:235:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3762:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3772:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3838:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3843:2:1",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3779:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3779:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3772:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3944:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c",
                      "nodeType": "YulIdentifier",
                      "src": "3855:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3855:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3957:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3968:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3973:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3964:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3964:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3957:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3750:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3758:3:1",
                "type": ""
              }
            ],
            "src": "3616:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4159:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4169:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4181:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4192:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4177:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4169:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4216:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4227:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4212:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4212:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4235:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4241:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4231:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4231:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4205:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4205:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4205:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4261:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4395:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4269:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4269:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4261:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4139:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4154:4:1",
                "type": ""
              }
            ],
            "src": "3988:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4519:125:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4541:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4549:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4537:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4537:14:1"
                      },
                      {
                        "hexValue": "6d6f64696679696e67206120506174656e742072657175697265732070617969",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4553:34:1",
                        "type": "",
                        "value": "modifying a Patent requires payi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4530:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4530:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4530:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4609:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4617:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4605:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4605:15:1"
                      },
                      {
                        "hexValue": "6e6720302e30352065746821",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4622:14:1",
                        "type": "",
                        "value": "ng 0.05 eth!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4598:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4598:39:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4598:39:1"
                }
              ]
            },
            "name": "store_literal_in_memory_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4511:6:1",
                "type": ""
              }
            ],
            "src": "4413:231:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4796:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4806:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4872:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4877:2:1",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4813:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4813:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4806:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4978:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6",
                      "nodeType": "YulIdentifier",
                      "src": "4889:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4889:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4889:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4991:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5002:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5007:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4998:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4991:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4784:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4792:3:1",
                "type": ""
              }
            ],
            "src": "4650:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5193:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5203:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5215:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5226:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5211:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5211:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5203:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5250:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5261:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5246:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5246:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5269:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5275:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5265:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5265:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5239:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5239:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5239:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5295:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5429:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5303:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5303:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5295:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5173:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5188:4:1",
                "type": ""
              }
            ],
            "src": "5022:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5512:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5529:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5552:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5534:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5534:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5522:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5522:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5522:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5500:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5507:3:1",
                "type": ""
              }
            ],
            "src": "5447:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5636:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5653:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5676:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5658:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5646:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5646:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5646:37:1"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5624:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5631:3:1",
                "type": ""
              }
            ],
            "src": "5571:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5849:288:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5859:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5871:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5882:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5867:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5867:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5859:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5939:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5952:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5963:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5948:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5948:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5895:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5895:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5895:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6020:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6033:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6044:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6029:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6029:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5976:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5976:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5976:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6102:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6115:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6126:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6111:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6111:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6058:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6058:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6058:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bytes32_t_bytes32__to_t_uint256_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5805:9:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5817:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5825:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5833:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5844:4:1",
                "type": ""
              }
            ],
            "src": "5695:442:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6249:124:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6271:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6279:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6267:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6267:14:1"
                      },
                      {
                        "hexValue": "746869732068617368206f6620646174612068617320616c7265616479206265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6283:34:1",
                        "type": "",
                        "value": "this hash of data has already be"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6260:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6260:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6339:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6347:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6335:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6335:15:1"
                      },
                      {
                        "hexValue": "656e20696e6a6563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6352:13:1",
                        "type": "",
                        "value": "en injected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6328:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6328:38:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6328:38:1"
                }
              ]
            },
            "name": "store_literal_in_memory_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6241:6:1",
                "type": ""
              }
            ],
            "src": "6143:230:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6525:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6535:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6601:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6606:2:1",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6542:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6542:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6535:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6707:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be",
                      "nodeType": "YulIdentifier",
                      "src": "6618:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6618:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6720:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6731:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6736:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6727:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6727:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6720:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6513:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6521:3:1",
                "type": ""
              }
            ],
            "src": "6379:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6922:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6932:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6944:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6955:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6940:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6940:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6932:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6979:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6990:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6975:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6975:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6998:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7004:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6994:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6994:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6968:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6968:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6968:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7024:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7158:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7032:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7032:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7024:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6902:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6917:4:1",
                "type": ""
              }
            ],
            "src": "6751:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7282:121:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7304:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7312:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7300:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7300:14:1"
                      },
                      {
                        "hexValue": "616464696e67206120506174656e7420726571756972657320706179696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7316:34:1",
                        "type": "",
                        "value": "adding a Patent requires paying "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7293:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7293:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7293:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7372:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7380:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7368:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7368:15:1"
                      },
                      {
                        "hexValue": "302e322065746821",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7385:10:1",
                        "type": "",
                        "value": "0.2 eth!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7361:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:35:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7361:35:1"
                }
              ]
            },
            "name": "store_literal_in_memory_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7274:6:1",
                "type": ""
              }
            ],
            "src": "7176:227:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7555:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7565:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7631:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7636:2:1",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7572:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7572:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7565:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7737:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77",
                      "nodeType": "YulIdentifier",
                      "src": "7648:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7648:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7648:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7750:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7761:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7766:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7757:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7757:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7750:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7543:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7551:3:1",
                "type": ""
              }
            ],
            "src": "7409:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7952:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7962:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7974:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7985:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7970:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7970:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7962:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8009:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8020:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8005:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8005:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8028:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8034:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8024:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8024:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7998:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8054:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8188:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8062:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8062:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8054:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7932:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7947:4:1",
                "type": ""
              }
            ],
            "src": "7781:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8234:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8251:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8254:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8244:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8244:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8244:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8348:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8351:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8341:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8341:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8341:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8372:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8375:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8365:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8365:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8365:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8206:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8435:190:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8445:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8472:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8454:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8454:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8445:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8568:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8570:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8570:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8570:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8493:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8500:66:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8490:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8490:77:1"
                  },
                  "nodeType": "YulIf",
                  "src": "8487:103:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8599:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8610:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8617:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8606:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8606:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8599:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8421:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8431:3:1",
                "type": ""
              }
            ],
            "src": "8392:233:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8785:288:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8795:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8807:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8818:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8803:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8803:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8795:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8875:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8888:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8899:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8884:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8884:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8831:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8831:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8831:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8956:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8969:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8980:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8965:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8965:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8912:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8912:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8912:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9038:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9051:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9062:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9047:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9047:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8994:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8994:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8994:72:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bytes32_t_address__to_t_uint256_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8741:9:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8753:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8761:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8769:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8780:4:1",
                "type": ""
              }
            ],
            "src": "8631:442:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c(memPtr) {\n\n        mstore(add(memPtr, 0), \"only the owner of the patent can\")\n\n        mstore(add(memPtr, 32), \" modify the hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"modifying a Patent requires payi\")\n\n        mstore(add(memPtr, 32), \"ng 0.05 eth!\")\n\n    }\n\n    function abi_encode_t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_bytes32__to_t_uint256_t_bytes32_t_bytes32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be(memPtr) {\n\n        mstore(add(memPtr, 0), \"this hash of data has already be\")\n\n        mstore(add(memPtr, 32), \"en injected\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77(memPtr) {\n\n        mstore(add(memPtr, 0), \"adding a Patent requires paying \")\n\n        mstore(add(memPtr, 32), \"0.2 eth!\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes32_t_address__to_t_uint256_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:2815:0:-:0;;;295:1;264:32;;60:2815;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:2815:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:788;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;816:759;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1776:108;1831:7;1857:12;:19;1870:5;1857:19;;;;;;;;;;;;;;;;;;;;;1850:26;;1776:108;;;:::o;2084:788::-;2165:17;2185:10;2165:30;;2242:7;:12;2250:3;2242:12;;;;;;;;;;;:18;;;;;;;;;;;;2228:32;;:10;:32;;;2206:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;2382:9;2369;:22;2347:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;2476:16;2495:7;:12;2503:3;2495:12;;;;;;;;;;;:17;;;2476:36;;2588:3;2555:12;:22;2568:8;2555:22;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2661:10;2636:12;:22;2649:8;2636:22;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2766:8;2746:7;:12;2754:3;2746:12;;;;;;;;;;;:17;;:28;;;;2819:38;2833:3;2838:8;2848;2819:38;;;;;;;;:::i;:::-;;;;;;;;2152:720;;2084:788;;:::o;816:759::-;894:17;914:9;894:29;;987:3;956:35;;:12;:19;969:5;956:19;;;;;;;;;;;;;;;;;;;;;:35;;;934:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;1108:9;1095;:22;1073:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1223:11;;:13;;;;;;;;;:::i;:::-;;;;;;1314:103;;;;;;;;1340:11;;1314:103;;;;1372:5;1314:103;;;;1399:6;1314:103;;;;;1291:7;:20;1299:11;;1291:20;;;;;;;;;;;:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:6;1460:12;:19;1473:5;1460:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1530:37;1540:11;;1553:5;1560:6;1530:37;;;;;;;;:::i;:::-;;;;;;;;881:694;816:759;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:77::-;1648:7;1677:5;1666:16;;1611:77;;;:::o;1694:122::-;1767:24;1785:5;1767:24;:::i;:::-;1760:5;1757:35;1747:63;;1806:1;1803;1796:12;1747:63;1694:122;:::o;1822:139::-;1868:5;1906:6;1893:20;1884:29;;1922:33;1949:5;1922:33;:::i;:::-;1822:139;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:122::-;2520:24;2538:5;2520:24;:::i;:::-;2513:5;2510:35;2500:63;;2559:1;2556;2549:12;2500:63;2447:122;:::o;2575:139::-;2621:5;2659:6;2646:20;2637:29;;2675:33;2702:5;2675:33;:::i;:::-;2575:139;;;;:::o;2720:474::-;2788:6;2796;2845:2;2833:9;2824:7;2820:23;2816:32;2813:119;;;2851:79;;:::i;:::-;2813:119;2971:1;2996:53;3041:7;3032:6;3021:9;3017:22;2996:53;:::i;:::-;2986:63;;2942:117;3098:2;3124:53;3169:7;3160:6;3149:9;3145:22;3124:53;:::i;:::-;3114:63;;3069:118;2720:474;;;;;:::o;3200:169::-;3284:11;3318:6;3313:3;3306:19;3358:4;3353:3;3349:14;3334:29;;3200:169;;;;:::o;3375:235::-;3515:34;3511:1;3503:6;3499:14;3492:58;3584:18;3579:2;3571:6;3567:15;3560:43;3375:235;:::o;3616:366::-;3758:3;3779:67;3843:2;3838:3;3779:67;:::i;:::-;3772:74;;3855:93;3944:3;3855:93;:::i;:::-;3973:2;3968:3;3964:12;3957:19;;3616:366;;;:::o;3988:419::-;4154:4;4192:2;4181:9;4177:18;4169:26;;4241:9;4235:4;4231:20;4227:1;4216:9;4212:17;4205:47;4269:131;4395:4;4269:131;:::i;:::-;4261:139;;3988:419;;;:::o;4413:231::-;4553:34;4549:1;4541:6;4537:14;4530:58;4622:14;4617:2;4609:6;4605:15;4598:39;4413:231;:::o;4650:366::-;4792:3;4813:67;4877:2;4872:3;4813:67;:::i;:::-;4806:74;;4889:93;4978:3;4889:93;:::i;:::-;5007:2;5002:3;4998:12;4991:19;;4650:366;;;:::o;5022:419::-;5188:4;5226:2;5215:9;5211:18;5203:26;;5275:9;5269:4;5265:20;5261:1;5250:9;5246:17;5239:47;5303:131;5429:4;5303:131;:::i;:::-;5295:139;;5022:419;;;:::o;5447:118::-;5534:24;5552:5;5534:24;:::i;:::-;5529:3;5522:37;5447:118;;:::o;5571:::-;5658:24;5676:5;5658:24;:::i;:::-;5653:3;5646:37;5571:118;;:::o;5695:442::-;5844:4;5882:2;5871:9;5867:18;5859:26;;5895:71;5963:1;5952:9;5948:17;5939:6;5895:71;:::i;:::-;5976:72;6044:2;6033:9;6029:18;6020:6;5976:72;:::i;:::-;6058;6126:2;6115:9;6111:18;6102:6;6058:72;:::i;:::-;5695:442;;;;;;:::o;6143:230::-;6283:34;6279:1;6271:6;6267:14;6260:58;6352:13;6347:2;6339:6;6335:15;6328:38;6143:230;:::o;6379:366::-;6521:3;6542:67;6606:2;6601:3;6542:67;:::i;:::-;6535:74;;6618:93;6707:3;6618:93;:::i;:::-;6736:2;6731:3;6727:12;6720:19;;6379:366;;;:::o;6751:419::-;6917:4;6955:2;6944:9;6940:18;6932:26;;7004:9;6998:4;6994:20;6990:1;6979:9;6975:17;6968:47;7032:131;7158:4;7032:131;:::i;:::-;7024:139;;6751:419;;;:::o;7176:227::-;7316:34;7312:1;7304:6;7300:14;7293:58;7385:10;7380:2;7372:6;7368:15;7361:35;7176:227;:::o;7409:366::-;7551:3;7572:67;7636:2;7631:3;7572:67;:::i;:::-;7565:74;;7648:93;7737:3;7648:93;:::i;:::-;7766:2;7761:3;7757:12;7750:19;;7409:366;;;:::o;7781:419::-;7947:4;7985:2;7974:9;7970:18;7962:26;;8034:9;8028:4;8024:20;8020:1;8009:9;8005:17;7998:47;8062:131;8188:4;8062:131;:::i;:::-;8054:139;;7781:419;;;:::o;8206:180::-;8254:77;8251:1;8244:88;8351:4;8348:1;8341:15;8375:4;8372:1;8365:15;8392:233;8431:3;8454:24;8472:5;8454:24;:::i;:::-;8445:33;;8500:66;8493:5;8490:77;8487:103;;8570:18;;:::i;:::-;8487:103;8617:1;8610:5;8606:13;8599:20;;8392:233;;;:::o;8631:442::-;8780:4;8818:2;8807:9;8803:18;8795:26;;8831:71;8899:1;8888:9;8884:17;8875:6;8831:71;:::i;:::-;8912:72;8980:2;8969:9;8965:18;8956:6;8912:72;:::i;:::-;8994;9062:2;9051:9;9047:18;9038:6;8994:72;:::i;:::-;8631:442;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract PatentManager {\r\n    \r\n    struct Patent {\r\n        uint256 id;     // id of patent        \r\n        bytes32 hash;   // Hash of the data\r\n        address owner;  // Owner's account\r\n    }\r\n\r\n    uint256 internal patentCount = 0;\r\n\r\n    mapping(uint256 => Patent) private patents;\r\n    mapping(bytes32 => address) private patentOwners;\r\n\r\n    // event: new patent added\r\n    event newPatent(uint256 id, bytes32 hash, address owner);\r\n\r\n    // event: patent hash changed\r\n    event patentChanged(uint256 id, bytes32 oldHash, bytes32 newHash);\r\n\r\n    /** \r\n     * @dev add new Patent, caller is required to pay 0.2 eth\r\n     * @param _hash hash of the data\r\n     * @param _owner owner of the patent (might be different from the caller)\r\n     */\r\n    function addPatent(bytes32 _hash, address _owner) public payable {\r\n\r\n        uint256 costToAdd = 0.2 ether;\r\n        require(\r\n            patentOwners[_hash] == address(0x0),\r\n            \"this hash of data has already been injected\"\r\n        );\r\n        require(\r\n            msg.value == costToAdd,\r\n            \"adding a Patent requires paying 0.2 eth!\"\r\n        );\r\n\r\n        // increment id\r\n        patentCount++;   \r\n        \r\n        // update patents map\r\n        patents[patentCount] = Patent({\r\n            id: patentCount,\r\n            hash: _hash,\r\n            owner: _owner\r\n        });\r\n\r\n        // update owners map\r\n        patentOwners[_hash] = _owner;\r\n\r\n        // emit event \r\n        emit newPatent(patentCount, _hash, _owner);\r\n    }\r\n\r\n    /** \r\n     * @dev check if hash of a patent exists\r\n     * @param _hash hash of the data\r\n     * @return return owner of the patent (if hash exists), null address otherwise (0x0)\r\n     */\r\n    function getPatent(bytes32 _hash) public view returns (address){\r\n        return patentOwners[_hash];\r\n    }\r\n\r\n    /** \r\n     * @dev change hash associated to a patent, only the owner has access\r\n     * @param _newHash hash of the modified data\r\n     * @param _id id of the patent of interest\r\n     */\r\n    function changePatent(bytes32 _newHash, uint256 _id) public payable {\r\n\r\n        uint256 costToMod = 0.05 ether;\r\n        require(\r\n            msg.sender == patents[_id].owner,\r\n            \"only the owner of the patent can modify the hash\"\r\n        );\r\n        require(\r\n            msg.value == costToMod,\r\n            \"modifying a Patent requires paying 0.05 eth!\"\r\n        );\r\n\r\n        bytes32 _oldHash = patents[_id].hash;\r\n\r\n        // update owners map\r\n        patentOwners[_oldHash] = address(0x0);  // old hash to owner is cleared\r\n        patentOwners[_newHash] = msg.sender;    // new hash to owner is set\r\n\r\n        // update patents map\r\n        patents[_id].hash = _newHash;    \r\n\r\n        // emit event\r\n        emit patentChanged(_id, _oldHash, _newHash);       \r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Lorenzo\\Desktop\\ProgettoEthereumWeb3diLorenzoGiaretta\\contracts\\PatentManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/PatentManager.sol",
    "exportedSymbols": {
      "PatentManager": [
        176
      ]
    },
    "id": 177,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PatentManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 176,
        "linearizedBaseContracts": [
          176
        ],
        "name": "PatentManager",
        "nameLocation": "69:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PatentManager.Patent",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "129:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "121:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "121:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "178:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "170:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 4,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "170:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "223:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "215:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "215:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Patent",
            "nameLocation": "103:6:0",
            "nodeType": "StructDefinition",
            "scope": 176,
            "src": "96:160:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "patentCount",
            "nameLocation": "281:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "264:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "264:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "295:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "mutability": "mutable",
            "name": "patents",
            "nameLocation": "340:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "305:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Patent_$8_storage_$",
              "typeString": "mapping(uint256 => struct PatentManager.Patent)"
            },
            "typeName": {
              "id": 15,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "313:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "305:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Patent_$8_storage_$",
                "typeString": "mapping(uint256 => struct PatentManager.Patent)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 14,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 13,
                  "name": "Patent",
                  "nameLocations": [
                    "324:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8,
                  "src": "324:6:0"
                },
                "referencedDeclaration": 8,
                "src": "324:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patent_$8_storage_ptr",
                  "typeString": "struct PatentManager.Patent"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "patentOwners",
            "nameLocation": "390:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 176,
            "src": "354:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "362:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "354:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "5ef12abd6c2d8f6c3ae12d017d313074f6296f1a1167119594ec6d7361b392c8",
            "id": 28,
            "name": "newPatent",
            "nameLocation": "449:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "467:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "459:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "479:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "471:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "493:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "485:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "458:41:0"
            },
            "src": "443:57:0"
          },
          {
            "anonymous": false,
            "eventSelector": "1823c9db63c13f8f0e8923945080acf2eabb312365d1e8073f1294db8a60de52",
            "id": 36,
            "name": "patentChanged",
            "nameLocation": "549:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "571:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "563:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldHash",
                  "nameLocation": "583:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "575:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newHash",
                  "nameLocation": "600:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "592:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:46:0"
            },
            "src": "543:66:0"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "881:694:0",
              "statements": [
                {
                  "assignments": [
                    45
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45,
                      "mutability": "mutable",
                      "name": "costToAdd",
                      "nameLocation": "902:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "894:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47,
                  "initialValue": {
                    "hexValue": "302e32",
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "914:9:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    },
                    "value": "0.2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "894:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 49,
                            "name": "patentOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "956:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "id": 50,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "969:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "956:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "987:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "979:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "979:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "979:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "956:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732068617368206f6620646174612068617320616c7265616479206265656e20696e6a6563746564",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1006:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be",
                          "typeString": "literal_string \"this hash of data has already been injected\""
                        },
                        "value": "this hash of data has already been injected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c9b744d42b961613f242736478556b3a1f694b6519c96380cafa78ac2c648be",
                          "typeString": "literal_string \"this hash of data has already been injected\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "934:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:128:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "934:128:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1095:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1099:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1095:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 63,
                          "name": "costToAdd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "1108:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1095:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616464696e67206120506174656e7420726571756972657320706179696e6720302e322065746821",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1132:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77",
                          "typeString": "literal_string \"adding a Patent requires paying 0.2 eth!\""
                        },
                        "value": "adding a Patent requires paying 0.2 eth!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb4c9a3f2b7a8c781daa8878c113d1c71acc4154936f1463f6dec907e92c7c77",
                          "typeString": "literal_string \"adding a Patent requires paying 0.2 eth!\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1073:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:112:0"
                },
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1223:13:0",
                    "subExpression": {
                      "id": 68,
                      "name": "patentCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1223:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:13:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 71,
                        "name": "patents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1291:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Patent_$8_storage_$",
                          "typeString": "mapping(uint256 => struct PatentManager.Patent storage ref)"
                        }
                      },
                      "id": 73,
                      "indexExpression": {
                        "id": 72,
                        "name": "patentCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1299:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1291:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patent_$8_storage",
                        "typeString": "struct PatentManager.Patent storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 75,
                          "name": "patentCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1340:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 76,
                          "name": "_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1372:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 77,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1399:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74,
                        "name": "Patent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1314:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Patent_$8_storage_ptr_$",
                          "typeString": "type(struct PatentManager.Patent storage pointer)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1336:2:0",
                        "1366:4:0",
                        "1392:5:0"
                      ],
                      "names": [
                        "id",
                        "hash",
                        "owner"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1314:103:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patent_$8_memory_ptr",
                        "typeString": "struct PatentManager.Patent memory"
                      }
                    },
                    "src": "1291:126:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patent_$8_storage",
                      "typeString": "struct PatentManager.Patent storage ref"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:126:0"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 81,
                        "name": "patentOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1460:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 83,
                      "indexExpression": {
                        "id": 82,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1473:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1460:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1482:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1460:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 88,
                        "name": "patentCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1540:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1553:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 90,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "1560:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87,
                      "name": "newPatent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1530:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (uint256,bytes32,address)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1530:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "EmitStatement",
                  "src": "1525:42:0"
                }
              ]
            },
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "617:193:0",
              "text": " @dev add new Patent, caller is required to pay 0.2 eth\n @param _hash hash of the data\n @param _owner owner of the patent (might be different from the caller)"
            },
            "functionSelector": "e0e4ec2b",
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPatent",
            "nameLocation": "825:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "843:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "835:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "858:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "850:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:31:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:0:0"
            },
            "scope": 176,
            "src": "816:759:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1839:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 102,
                      "name": "patentOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1857:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 104,
                    "indexExpression": {
                      "id": 103,
                      "name": "_hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1870:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1857:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 105,
                  "nodeType": "Return",
                  "src": "1850:26:0"
                }
              ]
            },
            "documentation": {
              "id": 95,
              "nodeType": "StructuredDocumentation",
              "src": "1583:187:0",
              "text": " @dev check if hash of a patent exists\n @param _hash hash of the data\n @return return owner of the patent (if hash exists), null address otherwise (0x0)"
            },
            "functionSelector": "172b33c8",
            "id": 107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPatent",
            "nameLocation": "1785:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "1803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1795:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1794:15:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1831:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1830:9:0"
            },
            "scope": 176,
            "src": "1776:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 174,
              "nodeType": "Block",
              "src": "2152:720:0",
              "statements": [
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "costToMod",
                      "nameLocation": "2173:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 174,
                      "src": "2165:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2165:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "hexValue": "302e3035",
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2185:10:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000_by_1",
                      "typeString": "int_const 50000000000000000"
                    },
                    "value": "0.05"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2165:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2228:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2232:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2228:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "patents",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2242:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Patent_$8_storage_$",
                                "typeString": "mapping(uint256 => struct PatentManager.Patent storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 112,
                              "src": "2250:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2242:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Patent_$8_storage",
                              "typeString": "struct PatentManager.Patent storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2255:5:0",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2242:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2228:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920746865206f776e6572206f662074686520706174656e742063616e206d6f64696679207468652068617368",
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c",
                          "typeString": "literal_string \"only the owner of the patent can modify the hash\""
                        },
                        "value": "only the owner of the patent can modify the hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e61b7984a21f612bd4f1d1eb770e07ae85a28de2db136afab003ab79f05380c",
                          "typeString": "literal_string \"only the owner of the patent can modify the hash\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2206:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2206:130:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2206:130:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 131,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2369:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2373:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2369:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 133,
                          "name": "costToMod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2382:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2369:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d6f64696679696e67206120506174656e7420726571756972657320706179696e6720302e30352065746821",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2406:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6",
                          "typeString": "literal_string \"modifying a Patent requires paying 0.05 eth!\""
                        },
                        "value": "modifying a Patent requires paying 0.05 eth!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_609340b84b933cc9086ee97af18ddfd0db64e183b0c015bd0e13963978f354a6",
                          "typeString": "literal_string \"modifying a Patent requires paying 0.05 eth!\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2347:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:116:0"
                },
                {
                  "assignments": [
                    139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "_oldHash",
                      "nameLocation": "2484:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 174,
                      "src": "2476:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 140,
                        "name": "patents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2495:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Patent_$8_storage_$",
                          "typeString": "mapping(uint256 => struct PatentManager.Patent storage ref)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "id": 141,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2503:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2495:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patent_$8_storage",
                        "typeString": "struct PatentManager.Patent storage ref"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2508:4:0",
                    "memberName": "hash",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5,
                    "src": "2495:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2476:36:0"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 145,
                        "name": "patentOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2555:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "id": 146,
                        "name": "_oldHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2568:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2555:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2588:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2580:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2580:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2580:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2555:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:37:0"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 154,
                        "name": "patentOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2636:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 155,
                        "name": "_newHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "2649:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2636:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2661:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2665:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2661:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2636:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:35:0"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 161,
                          "name": "patents",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2746:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Patent_$8_storage_$",
                            "typeString": "mapping(uint256 => struct PatentManager.Patent storage ref)"
                          }
                        },
                        "id": 163,
                        "indexExpression": {
                          "id": 162,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "2754:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2746:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Patent_$8_storage",
                          "typeString": "struct PatentManager.Patent storage ref"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2759:4:0",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "2746:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 165,
                      "name": "_newHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "2766:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2746:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2746:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 169,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2833:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 170,
                        "name": "_oldHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2838:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 171,
                        "name": "_newHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "2848:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 168,
                      "name": "patentChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2819:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32,bytes32)"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "EmitStatement",
                  "src": "2814:43:0"
                }
              ]
            },
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "1892:186:0",
              "text": " @dev change hash associated to a patent, only the owner has access\n @param _newHash hash of the modified data\n @param _id id of the patent of interest"
            },
            "functionSelector": "d06e4168",
            "id": 175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changePatent",
            "nameLocation": "2093:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_newHash",
                  "nameLocation": "2114:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "2106:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2132:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "2124:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:31:0"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2152:0:0"
            },
            "scope": 176,
            "src": "2084:788:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 177,
        "src": "60:2815:0",
        "usedErrors": []
      }
    ],
    "src": "33:2842:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9ed2D1d67ee7c71Dd053D51274f9Ff127f769517",
      "transactionHash": "0x3657669917298dac823b99c983ccd7bcf269b82b31f30812c6d4590ee1662c61"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-03T19:35:04.201Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addPatent(bytes32,address)": {
        "details": "add new Patent, caller is required to pay 0.2 eth",
        "params": {
          "_hash": "hash of the data",
          "_owner": "owner of the patent (might be different from the caller)"
        }
      },
      "changePatent(bytes32,uint256)": {
        "details": "change hash associated to a patent, only the owner has access",
        "params": {
          "_id": "id of the patent of interest",
          "_newHash": "hash of the modified data"
        }
      },
      "getPatent(bytes32)": {
        "details": "check if hash of a patent exists",
        "params": {
          "_hash": "hash of the data"
        },
        "returns": {
          "_0": "return owner of the patent (if hash exists), null address otherwise (0x0)"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}